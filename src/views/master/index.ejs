<%- include('../partials/header') %>
<main>
  <div class="container d-flex flex-column align-items-center mt-5 gap-3">
    <h1>Ini adalah halaman Master</h1>
    <button type="button" class="btn btn-primary start" onclick="startQuiz()">
      Start Quiz!
    </button>

    <div class="w-75 mt-3">
      <h2 class="text-center">Team Lists</h2>
      <div id="list-tim" class="row g-3 justify-content-center">
        <!-- Tim akan ditampilkan di sini -->
      </div>
    </div>
  </div>
</main>

<script>
  let currentIndex = 0;
  const nextQuestion = (idx) => {
    socket.emit("getQuestion", idx);
  };

  const socket = io("http://192.168.88.57:3000", {
    query: {
      userId: "admin123", // ID tetap
      role: "admin",
    },
  });

  const formatter = new Intl.NumberFormat('en-SG', {
    style: 'currency',
    currency: 'SGD',
    currencyDisplay: 'symbol',
  });

  // Menghapus tim saat keluar
  socket.on("TeamLeave", (namatim) => {
    console.log(`${namatim} left`);
    const listTim = document.getElementById("list-tim");
    const itemToRemove = Array.from(listTim.children).find(
      (div) => div.getAttribute("data-team") === namatim
    );
    if (itemToRemove) {
      listTim.removeChild(itemToRemove);
    }

    fetch("/updatetim", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ teamName: namatim }),
    })
      .then((response) => response.json())
      .then((data) => console.log(data))
      .catch((error) => console.error("Error:", error));
  });

  socket.on("question", (data) => {
    let duration = data.durations
    const timer = document.querySelector(".timer")

    startTimer(duration, timer)
  })

  socket.on("updateTeams", (Teams) => {
    const listTim = document.getElementById("list-tim");
    listTim.innerHTML = "";

    for (let id in Teams) {
      const div = document.createElement("div");
      const fund = formatter.format(Teams[id].fund);
      div.className = "col-md-4 text-center p-2";
      div.setAttribute("data-team", Teams[id].name);
      div.innerHTML = `<div class="p-2 border rounded bg-light" style="font-weight: 600; font-size: 20px;">${Teams[id].name}<br>S${fund}</div>`;
      listTim.appendChild(div);
    }
  });

  const startQuiz = () => {
    socket.emit("startQuiz");

    const startBtn = document.querySelector(".start")
    startBtn.style.display = "none"

    nextQuestion(currentIndex);
  };

  const startTimer = (duration, timer) => {
    let waktu = duration;

    const updateTimer = () => {
      timer.textContent = waktu;
      if (waktu <= 0) {
        clearInterval(timerr);
        timer.textContent = "Time's Up!";
        currentIndex += 1
        nextQuestion(currentIndex)
      }
      waktu--;
    }

    let timerr = setInterval(updateTimer, 1000);

    updateTimer()
  }
</script>

<%- include('../partials/footer') %>
