<%- include('../partials/header') %>
<main>
  <div
    class="wrapper d-flex align-items-center justify-content-center"
    style="height: 85vh"
  >
    <div
      class="container d-flex flex-column align-items-center"
      style="margin-top: -140px"
    >
      <section class="wait text-center">
        <h2>Welcome, Tim <strong><%= namatim %>,</strong></h2>
        <h2 id="credit"></h2>
      </section>
      <section class="quiz" style="display: none">
        <div id="question"></div>
        <div class="row justify-content-center">
          <div class="col-md-6">
            <div id="options"></div>
          </div>
        </div>
      </section>
      <section class="end" style="display: none">
        <div class="congrats"></div>
      </section>
    </div>
  </div>
</main>

<script>
  document.addEventListener("click", enterFullscreen, { once: true });

  var namatim = "<%= namatim %>";
  let fund = 1000000;
  let question;

  // const logo = document.querySelector(".logo");
  // const logoimg = document.querySelector("#logo");

  // logo.style.marginTop = "-50px";
  // logo.style.maxWidth = "250px";
  // logoimg.style.width = "200px";
  // logoimg.style.height = "107px";

  const formatter = new Intl.NumberFormat("en-SG", {
    style: "currency",
    currency: "SGD",
    currencyDisplay: "symbol",
  });

  document.getElementById(
    "credit"
  ).innerHTML = `Congratulations! You've got<br><br> <h1 style="font-weight: 650; font-size: 50px;">S${formatter.format(
    fund
  )} </h1><br>Initial Balance`;

  const socket = io("http://localhost:3000", {
    query: {
      userId: namatim, // ID tetap
      role: "user",
    },
  });

  function enterFullscreen() {
    if (!document.fullscreenElement) {
      document.documentElement.requestFullscreen().catch((err) => {
        console.warn("Fullscreen request failed:", err);
      });
    }
  }

  const submitAnswer = (i) => {
    const optionsDiv = document.getElementById("options");

    let btn = optionsDiv.querySelectorAll("*");

    btn.forEach((button) => {
      button.classList.add("disabled");
    });

    fund += fund * (i / 100);
    console.log(
      `Fund after question: S${formatter.format(
        fund
      )} (calculated from ${i}% adjustment)`
    );

    socket.emit("updatefund", { teamName: namatim, amount: fund });
  };

  socket.on("updateTeams", (Teams) => {
    fund = Teams[namatim].fund;
  });

  socket.on("question", (data) => {
    const questionDiv = document.getElementById("question");
    questionDiv.innerText = data.question;
    questionDiv.classList.add("h2", "text-center");

    question = data;

    const optionsDiv = document.getElementById("options");
    optionsDiv.innerHTML = "";
    optionsDiv.classList.add(
      "d-flex",
      "flex-column",
      "gap-3",
      "align-items-center",
      "mt-3"
    );

    data.options.forEach((opt, i) => {
      const btn = document.createElement("button");
      btn.innerText = opt.text; // Ambil teks dari objek option
      btn.onclick = () => submitAnswer(opt.value);

      // Tambahkan class Bootstrap ke tombol
      btn.classList.add("btn", "btn-primary", "w-100");

      // Tambahkan tombol ke dalam optionsDiv
      optionsDiv.appendChild(btn);
    });

    let duration = data.durations;
    const timer = document.querySelector(".timer");

    startTimer(duration, timer);
  });

  socket.on("end", () => {
    console.log("quiz was ended");
    const quizElement = document.querySelector(".quiz");
    const endElement = document.querySelector(".end");
    const congratsElement = document.querySelector(".congrats");

    quizElement.style.display = "none";
    endElement.style.display = "block";

    congratsElement.classList.add("h2", "text-center");
    congratsElement.innerText = `Quiz was ended, your final fund is S${formatter.format(
      fund
    )}`;
  });

  socket.on("quizStarted", () => {
    console.log("Event quizStarted diterima!");
    const waitElement = document.querySelector(".wait");
    const quizElement = document.querySelector(".quiz");

    if (waitElement) {
      console.log("Menyembunyikan wait...");
      waitElement.classList.remove("d-flex");
      waitElement.classList.add("d-none");
    } else {
      console.log("Elemen .wait tidak ditemukan!");
    }

    if (quizElement) {
      console.log("Menampilkan quiz...");
      quizElement.style.display = "block";
    } else {
      console.log("Elemen .quiz tidak ditemukan!");
    }
  });

  const startTimer = (duration, timer) => {
    let waktu = duration;

    const updateTimer = () => {
      timer.textContent = waktu;
      if (waktu <= 0) {
        clearInterval(timerr);
        timer.textContent = "Time's Up!";
      }
      waktu--;
    };

    let timerr = setInterval(updateTimer, 1000);

    updateTimer();
  };
</script>

<%- include('../partials/footer') %>
